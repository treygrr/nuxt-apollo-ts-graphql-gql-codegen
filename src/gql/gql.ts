/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "query Person($id: ID!) {\n  person(id: $id) {\n    birthYear\n    created\n    edited\n    eyeColor\n    gender\n    hairColor\n    height\n    id\n    mass\n    name\n    skinColor\n    ...FilmConnection\n  }\n}": types.PersonDocument,
    "fragment FilmConnection on Person {\n  filmConnection {\n    totalCount\n    edges {\n      cursor\n      node {\n        created\n        director\n        edited\n        episodeID\n        id\n        openingCrawl\n        producers\n        releaseDate\n        title\n      }\n    }\n    films {\n      characterConnection {\n        characters {\n          birthYear\n          created\n          edited\n          eyeColor\n          filmConnection {\n            totalCount\n          }\n          gender\n          hairColor\n          height\n          homeworld {\n            climates\n            created\n            diameter\n            edited\n            gravity\n            id\n            name\n            orbitalPeriod\n            population\n            rotationPeriod\n            surfaceWater\n            terrains\n          }\n          id\n          mass\n          name\n          skinColor\n          starshipConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          vehicleConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n        }\n        edges {\n          cursor\n          node {\n            birthYear\n            created\n            edited\n            eyeColor\n            gender\n            hairColor\n            height\n            id\n            mass\n            name\n            skinColor\n          }\n        }\n        totalCount\n      }\n      created\n      director\n      edited\n      episodeID\n      id\n      openingCrawl\n      planetConnection {\n        edges {\n          cursor\n          node {\n            climates\n            created\n            diameter\n            edited\n            gravity\n            id\n            name\n            orbitalPeriod\n            population\n            rotationPeriod\n            surfaceWater\n            terrains\n          }\n        }\n        planets {\n          climates\n          created\n          diameter\n          edited\n          filmConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          gravity\n          id\n          name\n          orbitalPeriod\n          population\n          residentConnection {\n            edges {\n              cursor\n            }\n            residents {\n              birthYear\n              created\n              edited\n              eyeColor\n              gender\n              hairColor\n              height\n              id\n              mass\n              name\n              skinColor\n            }\n            totalCount\n          }\n          rotationPeriod\n          surfaceWater\n          terrains\n        }\n        totalCount\n      }\n      producers\n      releaseDate\n      speciesConnection {\n        edges {\n          cursor\n          node {\n            averageHeight\n            averageLifespan\n            classification\n            created\n            designation\n            edited\n            eyeColors\n            hairColors\n            id\n            language\n            name\n            skinColors\n          }\n        }\n        species {\n          averageHeight\n          averageLifespan\n          classification\n          created\n          designation\n          edited\n          eyeColors\n          filmConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          hairColors\n          id\n          language\n          name\n          personConnection {\n            edges {\n              cursor\n            }\n            people {\n              birthYear\n              created\n              edited\n              eyeColor\n              gender\n              hairColor\n              height\n              id\n              mass\n              name\n              skinColor\n            }\n            totalCount\n          }\n          skinColors\n        }\n        totalCount\n      }\n      starshipConnection {\n        edges {\n          cursor\n          node {\n            MGLT\n            cargoCapacity\n            consumables\n            costInCredits\n            created\n            crew\n            edited\n            hyperdriveRating\n            id\n            length\n            manufacturers\n            maxAtmospheringSpeed\n            model\n            name\n            passengers\n            starshipClass\n          }\n        }\n        starships {\n          MGLT\n          cargoCapacity\n          consumables\n          costInCredits\n          created\n          crew\n          edited\n          filmConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          hyperdriveRating\n          id\n          length\n          manufacturers\n          maxAtmospheringSpeed\n          model\n          name\n          passengers\n          pilotConnection {\n            edges {\n              cursor\n            }\n            pilots {\n              birthYear\n              created\n              edited\n              eyeColor\n              gender\n              hairColor\n              height\n              id\n              mass\n              name\n              skinColor\n            }\n            totalCount\n          }\n          starshipClass\n        }\n        totalCount\n      }\n      title\n      vehicleConnection {\n        edges {\n          cursor\n          node {\n            cargoCapacity\n            consumables\n            costInCredits\n            created\n            crew\n            edited\n            id\n            length\n            manufacturers\n            maxAtmospheringSpeed\n            model\n            name\n            passengers\n            vehicleClass\n          }\n        }\n        totalCount\n        vehicles {\n          cargoCapacity\n          consumables\n          costInCredits\n          created\n          crew\n          edited\n          filmConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          id\n          length\n          manufacturers\n          maxAtmospheringSpeed\n          model\n          name\n          passengers\n          pilotConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          vehicleClass\n        }\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n      hasPreviousPage\n      startCursor\n    }\n  }\n}": types.FilmConnectionFragmentDoc,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query Person($id: ID!) {\n  person(id: $id) {\n    birthYear\n    created\n    edited\n    eyeColor\n    gender\n    hairColor\n    height\n    id\n    mass\n    name\n    skinColor\n    ...FilmConnection\n  }\n}"): (typeof documents)["query Person($id: ID!) {\n  person(id: $id) {\n    birthYear\n    created\n    edited\n    eyeColor\n    gender\n    hairColor\n    height\n    id\n    mass\n    name\n    skinColor\n    ...FilmConnection\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "fragment FilmConnection on Person {\n  filmConnection {\n    totalCount\n    edges {\n      cursor\n      node {\n        created\n        director\n        edited\n        episodeID\n        id\n        openingCrawl\n        producers\n        releaseDate\n        title\n      }\n    }\n    films {\n      characterConnection {\n        characters {\n          birthYear\n          created\n          edited\n          eyeColor\n          filmConnection {\n            totalCount\n          }\n          gender\n          hairColor\n          height\n          homeworld {\n            climates\n            created\n            diameter\n            edited\n            gravity\n            id\n            name\n            orbitalPeriod\n            population\n            rotationPeriod\n            surfaceWater\n            terrains\n          }\n          id\n          mass\n          name\n          skinColor\n          starshipConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          vehicleConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n        }\n        edges {\n          cursor\n          node {\n            birthYear\n            created\n            edited\n            eyeColor\n            gender\n            hairColor\n            height\n            id\n            mass\n            name\n            skinColor\n          }\n        }\n        totalCount\n      }\n      created\n      director\n      edited\n      episodeID\n      id\n      openingCrawl\n      planetConnection {\n        edges {\n          cursor\n          node {\n            climates\n            created\n            diameter\n            edited\n            gravity\n            id\n            name\n            orbitalPeriod\n            population\n            rotationPeriod\n            surfaceWater\n            terrains\n          }\n        }\n        planets {\n          climates\n          created\n          diameter\n          edited\n          filmConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          gravity\n          id\n          name\n          orbitalPeriod\n          population\n          residentConnection {\n            edges {\n              cursor\n            }\n            residents {\n              birthYear\n              created\n              edited\n              eyeColor\n              gender\n              hairColor\n              height\n              id\n              mass\n              name\n              skinColor\n            }\n            totalCount\n          }\n          rotationPeriod\n          surfaceWater\n          terrains\n        }\n        totalCount\n      }\n      producers\n      releaseDate\n      speciesConnection {\n        edges {\n          cursor\n          node {\n            averageHeight\n            averageLifespan\n            classification\n            created\n            designation\n            edited\n            eyeColors\n            hairColors\n            id\n            language\n            name\n            skinColors\n          }\n        }\n        species {\n          averageHeight\n          averageLifespan\n          classification\n          created\n          designation\n          edited\n          eyeColors\n          filmConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          hairColors\n          id\n          language\n          name\n          personConnection {\n            edges {\n              cursor\n            }\n            people {\n              birthYear\n              created\n              edited\n              eyeColor\n              gender\n              hairColor\n              height\n              id\n              mass\n              name\n              skinColor\n            }\n            totalCount\n          }\n          skinColors\n        }\n        totalCount\n      }\n      starshipConnection {\n        edges {\n          cursor\n          node {\n            MGLT\n            cargoCapacity\n            consumables\n            costInCredits\n            created\n            crew\n            edited\n            hyperdriveRating\n            id\n            length\n            manufacturers\n            maxAtmospheringSpeed\n            model\n            name\n            passengers\n            starshipClass\n          }\n        }\n        starships {\n          MGLT\n          cargoCapacity\n          consumables\n          costInCredits\n          created\n          crew\n          edited\n          filmConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          hyperdriveRating\n          id\n          length\n          manufacturers\n          maxAtmospheringSpeed\n          model\n          name\n          passengers\n          pilotConnection {\n            edges {\n              cursor\n            }\n            pilots {\n              birthYear\n              created\n              edited\n              eyeColor\n              gender\n              hairColor\n              height\n              id\n              mass\n              name\n              skinColor\n            }\n            totalCount\n          }\n          starshipClass\n        }\n        totalCount\n      }\n      title\n      vehicleConnection {\n        edges {\n          cursor\n          node {\n            cargoCapacity\n            consumables\n            costInCredits\n            created\n            crew\n            edited\n            id\n            length\n            manufacturers\n            maxAtmospheringSpeed\n            model\n            name\n            passengers\n            vehicleClass\n          }\n        }\n        totalCount\n        vehicles {\n          cargoCapacity\n          consumables\n          costInCredits\n          created\n          crew\n          edited\n          filmConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          id\n          length\n          manufacturers\n          maxAtmospheringSpeed\n          model\n          name\n          passengers\n          pilotConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          vehicleClass\n        }\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n      hasPreviousPage\n      startCursor\n    }\n  }\n}"): (typeof documents)["fragment FilmConnection on Person {\n  filmConnection {\n    totalCount\n    edges {\n      cursor\n      node {\n        created\n        director\n        edited\n        episodeID\n        id\n        openingCrawl\n        producers\n        releaseDate\n        title\n      }\n    }\n    films {\n      characterConnection {\n        characters {\n          birthYear\n          created\n          edited\n          eyeColor\n          filmConnection {\n            totalCount\n          }\n          gender\n          hairColor\n          height\n          homeworld {\n            climates\n            created\n            diameter\n            edited\n            gravity\n            id\n            name\n            orbitalPeriod\n            population\n            rotationPeriod\n            surfaceWater\n            terrains\n          }\n          id\n          mass\n          name\n          skinColor\n          starshipConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          vehicleConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n        }\n        edges {\n          cursor\n          node {\n            birthYear\n            created\n            edited\n            eyeColor\n            gender\n            hairColor\n            height\n            id\n            mass\n            name\n            skinColor\n          }\n        }\n        totalCount\n      }\n      created\n      director\n      edited\n      episodeID\n      id\n      openingCrawl\n      planetConnection {\n        edges {\n          cursor\n          node {\n            climates\n            created\n            diameter\n            edited\n            gravity\n            id\n            name\n            orbitalPeriod\n            population\n            rotationPeriod\n            surfaceWater\n            terrains\n          }\n        }\n        planets {\n          climates\n          created\n          diameter\n          edited\n          filmConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          gravity\n          id\n          name\n          orbitalPeriod\n          population\n          residentConnection {\n            edges {\n              cursor\n            }\n            residents {\n              birthYear\n              created\n              edited\n              eyeColor\n              gender\n              hairColor\n              height\n              id\n              mass\n              name\n              skinColor\n            }\n            totalCount\n          }\n          rotationPeriod\n          surfaceWater\n          terrains\n        }\n        totalCount\n      }\n      producers\n      releaseDate\n      speciesConnection {\n        edges {\n          cursor\n          node {\n            averageHeight\n            averageLifespan\n            classification\n            created\n            designation\n            edited\n            eyeColors\n            hairColors\n            id\n            language\n            name\n            skinColors\n          }\n        }\n        species {\n          averageHeight\n          averageLifespan\n          classification\n          created\n          designation\n          edited\n          eyeColors\n          filmConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          hairColors\n          id\n          language\n          name\n          personConnection {\n            edges {\n              cursor\n            }\n            people {\n              birthYear\n              created\n              edited\n              eyeColor\n              gender\n              hairColor\n              height\n              id\n              mass\n              name\n              skinColor\n            }\n            totalCount\n          }\n          skinColors\n        }\n        totalCount\n      }\n      starshipConnection {\n        edges {\n          cursor\n          node {\n            MGLT\n            cargoCapacity\n            consumables\n            costInCredits\n            created\n            crew\n            edited\n            hyperdriveRating\n            id\n            length\n            manufacturers\n            maxAtmospheringSpeed\n            model\n            name\n            passengers\n            starshipClass\n          }\n        }\n        starships {\n          MGLT\n          cargoCapacity\n          consumables\n          costInCredits\n          created\n          crew\n          edited\n          filmConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          hyperdriveRating\n          id\n          length\n          manufacturers\n          maxAtmospheringSpeed\n          model\n          name\n          passengers\n          pilotConnection {\n            edges {\n              cursor\n            }\n            pilots {\n              birthYear\n              created\n              edited\n              eyeColor\n              gender\n              hairColor\n              height\n              id\n              mass\n              name\n              skinColor\n            }\n            totalCount\n          }\n          starshipClass\n        }\n        totalCount\n      }\n      title\n      vehicleConnection {\n        edges {\n          cursor\n          node {\n            cargoCapacity\n            consumables\n            costInCredits\n            created\n            crew\n            edited\n            id\n            length\n            manufacturers\n            maxAtmospheringSpeed\n            model\n            name\n            passengers\n            vehicleClass\n          }\n        }\n        totalCount\n        vehicles {\n          cargoCapacity\n          consumables\n          costInCredits\n          created\n          crew\n          edited\n          filmConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          id\n          length\n          manufacturers\n          maxAtmospheringSpeed\n          model\n          name\n          passengers\n          pilotConnection {\n            edges {\n              cursor\n            }\n            totalCount\n          }\n          vehicleClass\n        }\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n      hasPreviousPage\n      startCursor\n    }\n  }\n}"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;